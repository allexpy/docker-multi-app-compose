"""
Django settings for application project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# GENERAL
# ------------------------------------------------------------------------------
DEBUG = bool(int(os.getenv('DEBUG', 1)))  # https://docs.djangoproject.com/en/dev/ref/settings/#debug
ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "*").split(" ")
LANGUAGE_CODE = "ro"  # https://docs.djangoproject.com/en/dev/ref/settings/#language-code
USE_I18N = True  # https://docs.djangoproject.com/en/dev/ref/settings/#use-i18n
USE_L10N = True  # https://docs.djangoproject.com/en/dev/ref/settings/#use-l10n
USE_TZ = True  # https://docs.djangoproject.com/en/dev/ref/settings/#use-tz
TIME_ZONE = "Europe/Bucharest"
FILE_UPLOAD_MAX_MEMORY_SIZE = 52428800  # 50 Megabytes
LOCALE_PATHS = [str(BASE_DIR / "locale")]  # https://docs.djangoproject.com/en/dev/ref/settings/#locale-paths
SECRET_KEY = os.getenv('SECRET_KEY', 'sdfkshdfjhsdf')
LANGUAGES = [
    ('en', _('English')),
    ('ro', _('Romanian')),
]
CSRF_TRUSTED_ORIGINS = ['http://localhost:8080']

# URLS
# ------------------------------------------------------------------------------
ROOT_URLCONF = "application.urls"  # https://docs.djangoproject.com/en/dev/ref/settings/#root-urlconf
WSGI_APPLICATION = "application.wsgi.application"  # https://docs.djangoproject.com/en/dev/ref/settings/#wsgi-application


# APPS
# ------------------------------------------------------------------------------
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
THIRD_PARTY_APPS = [
    'django_celery_beat',
    'django_celery_results'
]
LOCAL_APPS = []
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS


# AUTHENTICATION
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#authentication-backends
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
]
# AUTH_USER_MODEL = 'private.Account'  # https://docs.djangoproject.com/en/dev/ref/settings/#auth-user-model
# LOGIN_REDIRECT_URL = "account:index"  # https://docs.djangoproject.com/en/dev/ref/settings/#login-redirect-url
# LOGIN_URL = "account:login"  # https://docs.djangoproject.com/en/dev/ref/settings/#login-url


# PASSWORDS
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#password-hashers
PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# SECURITY
# ------------------------------------------------------------------------------
SESSION_COOKIE_HTTPONLY = True  # https://docs.djangoproject.com/en/dev/ref/settings/#session-cookie-httponly
CSRF_COOKIE_HTTPONLY = True  # https://docs.djangoproject.com/en/dev/ref/settings/#csrf-cookie-httponly
SECURE_BROWSER_XSS_FILTER = True  # https://docs.djangoproject.com/en/dev/ref/settings/#secure-browser-xss-filter
X_FRAME_OPTIONS = "DENY"  # https://docs.djangoproject.com/en/dev/ref/settings/#x-frame-options
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


# CACHES
# ------------------------------------------------------------------------------


# # REDIS
# REDIS_URL = "redis://@{host}:{port}/1".format(
#     host=os.getenv('REDIS_HOST', 'localhost'),
#     port=6379
# )
#
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': REDIS_URL,
#         'OPTIONS': {
#             'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#             'PARSER_CLASS': 'redis.connection.HiredisParser',
#             'CONNECTION_POOL_CLASS': 'redis.BlockingConnectionPool',
#             'PICKLE_VERSION': -1,
#         },
#     },
# }


# SESSIONS
# ------------------------------------------------------------------------------
SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"
SESSION_CACHE_ALIAS = 'default'
SESSION_COOKIE_NAME = 'bsid'
SESSION_COOKIE_AGE = 1209600  # 2 weeks, after a user logs in the expire date will be set to 5 years


# MIDDLEWARE
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#middleware
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.common.BrokenLinkEmailsMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


# STATIC
# ------------------------------------------------------------------------------
STATIC_URL = '/static/'  # https://docs.djangoproject.com/en/dev/ref/settings/#static-url
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # https://docs.djangoproject.com/en/dev/ref/settings/#static-root

# https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#staticfiles-finders
STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]


# MEDIA
# ------------------------------------------------------------------------------
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  # https://docs.djangoproject.com/en/dev/ref/settings/#media-root
# https://docs.djangoproject.com/en/dev/ref/settings/#media-url
MEDIA_URL = "/media/"


#

# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [''],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# DATABASE
# ------------------------------------------------------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('POSTGRES_DB', 'django'),
        'USER': os.getenv('POSTGRES_USER', 'django'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'django'),
        'HOST': os.getenv('POSTGRES_HOST', 'localhost'),
        'PORT': os.getenv('POSTGRES_PORT', 5432),
    }
}


# only devs need to override the settings with a local_settings file
try:
    from application.local_settings import *  # noqa
except ImportError:
    pass
